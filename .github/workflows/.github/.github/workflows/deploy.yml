name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: devops-ci-cd-demo

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm ci

      - name: Unit tests
        run: npm test

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Tag latest
        run: docker tag ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

      - name: Push images
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-test-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      # Provide your cluster kubeconfig via secret KUBECONFIG_FILE (base64 encoded kubeconfig)
      - name: Write kubeconfig
        run: echo "${{ secrets.KUBECONFIG_FILE }}" | base64 -d > $HOME/.kube/config

      - name: Set image to latest
        run: |
          kubectl set image deployment/devops-ci-cd-demo web=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest --record || true

      - name: Apply manifests
        run: kubectl apply -f k8s-deployment.yml

      - name: Rollout status
        run: kubectl rollout status deployment/devops-ci-cd-demo --timeout=120s
